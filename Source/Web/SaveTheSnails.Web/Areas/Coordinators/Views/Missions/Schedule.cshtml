@{
    ViewBag.Title = "Schedule";
}

<h2>Schedule</h2>

@*<div id="team-schedule">
    <div id="people">
        <input checked type="checkbox" id="alex" value="1">
        <input checked type="checkbox" id="bob" value="2">
        <input type="checkbox" id="charlie" value="3">
    </div>
</div>*@
@(Html.Kendo().Scheduler<SaveTheSnails.Web.Areas.Coordinators.ViewModels.MissionViewModel>()
    .Name("scheduler")
    .Date(new DateTime(2014, 11, 16))
    .StartTime(new DateTime(2014, 11, 16, 7, 00, 00))
    .Height(600)
    .Views(views =>
    {
        views.DayView();
        views.WorkWeekView();
        views.WeekView(weekView => weekView.Selected(true));
        views.MonthView();
        views.AgendaView();
    })
    .Timezone("Etc/UTC")
    .Resources(resource =>
    {
        //resource.Add(m => m.RequiredParticipants)
        //        .Title("Required Participants")
        //        .DataTextField("Text")
        //        .DataValueField("Value")
        //        .DataColorField("Color")
        //        .ValuePrimitive(true)
        //        .BindTo(new[] { 
        //            new { Text = "Meeting Room 101", Value = 1, Color = "#6eb3fa" },
        //            new { Text = "Meeting Room 201", Value = 2, Color = "#f58a8a" } 
        //        }); 

        resource.Add(m => m.MissionProblems)
            .Title("Problems")
            .Multiple(true)
            .DataTextField("Title")
            .DataValueField("Id")
            .DataColorField("Color")
            .DataSource(source => source
                .Read(read => read.Action("GetProblemsList", "Missions")));

    })
    .DataSource(d => d
        .Model(m =>
        {
            m.Id(f => f.Id);
            m.Field(f => f.Title).DefaultValue("No title");
            m.Field(f => f.CoordinatorID);
            m.Field(f => f.Title).DefaultValue("No title");
            m.Field(f => f.MissionProblems).Editable();
            m.Field(f => f.RequiredParticipants);
            m.RecurrenceId(f => f.RecurrenceID);

        })
        .Read(read => read.Action("Read", "Missions"))
        .Create(create => create.Action("Create", "Missions"))
        .Destroy("Destroy", "Missions")
        .Update("Update", "Missions")
        //.Filter(filters =>
        //{
        //    filters.Add(model => model.CoordinatorID).IsEqualTo(1).Or().IsEqualTo(2);
        //})
    )
)

<script type="text/javascript">
    $(function () {
        $("#people :checkbox").change(function (e) {
            var checked = $.map($("#people :checked"), function (checkbox) {
                return parseInt($(checkbox).val());
            });

            var filter = {
                logic: "or",
                filters: $.map(checked, function (value) {
                    return {
                        operator: "eq",
                        field: "CoordinatorID",
                        value: value
                    };
                })
            };

            var scheduler = $("#scheduler").data("kendoScheduler");

            scheduler.dataSource.filter(filter);
        });
    })
</script>


@*<style scoped>
    #scheduler {
        font-size: 14px;
    }
    #team-schedule {
        background: url('@Url.Content("~/Content/web/scheduler/")team-schedule.png') transparent no-repeat;
        height: 115px;
        position: relative;
    }

    #people {
        background: url('@Url.Content("~/Content/web/scheduler/")scheduler-people.png') no-repeat;
        width: 345px;
        height: 115px;
        position: absolute;
        right: 0;
    }
    #alex {
        position: absolute;
        left: 4px;
        top: 81px;
    }
    #bob {
        position: absolute;
        left: 119px;
        top: 81px;
    }
    #charlie {
        position: absolute;
        left: 234px;
        top: 81px;
    }
</style>*@



